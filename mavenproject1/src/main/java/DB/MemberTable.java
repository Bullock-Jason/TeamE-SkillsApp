package DB;
// Generated Nov 9, 2016 6:54:11 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * MemberTable generated by hbm2java
 */
@Entity
@Table(name="member_table"
    ,catalog="cit360_team_e_skills_db"
    , uniqueConstraints = {@UniqueConstraint(columnNames="addressID"), @UniqueConstraint(columnNames="skillsID")} 
)
public class MemberTable  implements java.io.Serializable {


     private int memberId;
     private AddressTable addressTable;
     private SkillsTable skillsTable;
     private String lname;
     private String fname;
     private String mname;
     private int phone;
     private int phoneType;
     private String email;
     private Integer wardId;
     private Set<UserTable> userTables = new HashSet<UserTable>(0);

    public MemberTable() {
    }

	
    public MemberTable(int memberId, AddressTable addressTable, SkillsTable skillsTable, String lname, String fname, int phone, int phoneType, String email) {
        this.memberId = memberId;
        this.addressTable = addressTable;
        this.skillsTable = skillsTable;
        this.lname = lname;
        this.fname = fname;
        this.phone = phone;
        this.phoneType = phoneType;
        this.email = email;
    }
    public MemberTable(int memberId, AddressTable addressTable, SkillsTable skillsTable, String lname, String fname, String mname, int phone, int phoneType, String email, Integer wardId, Set<UserTable> userTables) {
       this.memberId = memberId;
       this.addressTable = addressTable;
       this.skillsTable = skillsTable;
       this.lname = lname;
       this.fname = fname;
       this.mname = mname;
       this.phone = phone;
       this.phoneType = phoneType;
       this.email = email;
       this.wardId = wardId;
       this.userTables = userTables;
    }
   
     @Id 

    
    @Column(name="memberID", unique=true, nullable=false)
    public int getMemberId() {
        return this.memberId;
    }
    
    public void setMemberId(int memberId) {
        this.memberId = memberId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="addressID", unique=true, nullable=false)
    public AddressTable getAddressTable() {
        return this.addressTable;
    }
    
    public void setAddressTable(AddressTable addressTable) {
        this.addressTable = addressTable;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="skillsID", unique=true, nullable=false)
    public SkillsTable getSkillsTable() {
        return this.skillsTable;
    }
    
    public void setSkillsTable(SkillsTable skillsTable) {
        this.skillsTable = skillsTable;
    }

    
    @Column(name="LName", nullable=false, length=40)
    public String getLname() {
        return this.lname;
    }
    
    public void setLname(String lname) {
        this.lname = lname;
    }

    
    @Column(name="FName", nullable=false, length=40)
    public String getFname() {
        return this.fname;
    }
    
    public void setFname(String fname) {
        this.fname = fname;
    }

    
    @Column(name="MName", length=40)
    public String getMname() {
        return this.mname;
    }
    
    public void setMname(String mname) {
        this.mname = mname;
    }

    
    @Column(name="phone", nullable=false)
    public int getPhone() {
        return this.phone;
    }
    
    public void setPhone(int phone) {
        this.phone = phone;
    }

    
    @Column(name="phoneType", nullable=false)
    public int getPhoneType() {
        return this.phoneType;
    }
    
    public void setPhoneType(int phoneType) {
        this.phoneType = phoneType;
    }

    
    @Column(name="Email", nullable=false)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="wardID")
    public Integer getWardId() {
        return this.wardId;
    }
    
    public void setWardId(Integer wardId) {
        this.wardId = wardId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="memberTable")
    public Set<UserTable> getUserTables() {
        return this.userTables;
    }
    
    public void setUserTables(Set<UserTable> userTables) {
        this.userTables = userTables;
    }




}


